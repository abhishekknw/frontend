# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdInventoryLocationMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, db_column='ADINVENTORY_ID')),
                ('adinventory_name', models.CharField(default='POSTER', max_length=10, db_column='ADINVENTORY_NAME', choices=[('POSTER', 'Poster'), ('STANDEE', 'Standee'), ('STALL', 'Stall'), ('BANNER', 'Banner')])),
            ],
            options={
                'db_table': 'ad_inventory_location_mapping',
            },
        ),
        migrations.CreateModel(
            name='AdInventoryType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_name', models.CharField(default='POSTER', max_length=20, db_column='ADINVENTORY_NAME', choices=[('POSTER', 'Poster'), ('STANDEE', 'Standee'), ('STALL', 'Stall'), ('BANNER', 'Banner')])),
                ('adinventory_type', models.CharField(max_length=20, db_column='ADINVENTORY_TYPE')),
            ],
            options={
                'db_table': 'ad_inventory_type',
            },
        ),
        migrations.CreateModel(
            name='BannerInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('type', models.CharField(max_length=20, null=True, db_column='BANNER_TYPE', blank=True)),
                ('banner_location', models.CharField(max_length=50, null=True, db_column='BANNER_DISPLAY_LOCATION', blank=True)),
                ('banner_size', models.CharField(max_length=10, null=True, db_column='BANNER_SIZE', blank=True)),
                ('inventory_status', models.CharField(max_length=15, db_column='INVENTORY_STATUS')),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'banner_inventory',
            },
        ),
        migrations.CreateModel(
            name='CarDisplayInventory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('car_display_location', models.CharField(max_length=50, null=True, db_column='CAR_DISPLAY_LOCATION', blank=True)),
                ('car_display_location_size', models.CharField(max_length=10, null=True, db_column='CAR_DISPLAY_LOCATION_SIZE', blank=True)),
                ('car_daily_price_society', models.FloatField(default=0.0, null=True, db_column='CAR_DAILY_PRICE_SOCIETY', blank=True)),
                ('car_daily_price_business', models.FloatField(default=0.0, null=True, db_column='CAR_DAILY_PRICE_BUSINESS', blank=True)),
                ('car_display_inventory_status', models.CharField(max_length=20, null=True, db_column='CAR_DISPLAY_INVENTORY_STATUS', blank=True)),
                ('car_display_type', models.CharField(max_length=50, null=True, db_column='CAR_DISPLAY_TYPE', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'car_display_inventory',
            },
        ),
        migrations.CreateModel(
            name='CommonAreaDetails',
            fields=[
                ('common_area_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='COMMON_AREA_ID')),
                ('pole_count', models.IntegerField(null=True, db_column='POLE_COUNT', blank=True)),
                ('street_furniture_count', models.IntegerField(null=True, db_column='STREET_FURNITURE_COUNT', blank=True)),
                ('banner_count', models.IntegerField(null=True, db_column='BANNER_COUNT', blank=True)),
                ('common_area_stalls_count', models.IntegerField(null=True, db_column='COMMON_AREA_STALLS_COUNT', blank=True)),
                ('car_display', models.IntegerField(null=True, db_column='CAR_DISPLAY', blank=True)),
                ('wall_count', models.IntegerField(null=True, db_column='WALL_COUNT', blank=True)),
                ('major_event_count', models.IntegerField(null=True, db_column='MAJOR_EVENT_COUNT', blank=True)),
                ('supplier_id', models.CharField(max_length=20, null=True, db_column='SUPPLIER_ID', blank=True)),
            ],
            options={
                'db_table': 'common_area_details',
            },
        ),
        migrations.CreateModel(
            name='CommunityHallInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('size_length', models.FloatField(default=0.0, null=True, db_column='SIZE_LENGTH', blank=True)),
                ('size_breadth', models.FloatField(default=0.0, null=True, db_column='SIZE_BREADTH', blank=True)),
                ('ceiling_height', models.FloatField(default=0.0, null=True, db_column='CEILING_HEIGHT', blank=True)),
                ('timings_open', models.TimeField(null=True, db_column='TIMINGS_OPEN', blank=True)),
                ('timings_close', models.TimeField(null=True, db_column='TIMINGS_CLOSE', blank=True)),
                ('rentals_current', models.FloatField(default=0.0, null=True, db_column='RENTALS_CURRENT', blank=True)),
                ('daily_price_society', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_SOCIETY', blank=True)),
                ('daily_price_business', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_BUSINESS', blank=True)),
                ('location', models.CharField(max_length=50, null=True, db_column='LOCATION', blank=True)),
                ('furniture_available', models.CharField(max_length=5, null=True, db_column='FURNITURE_AVAILABLE', blank=True)),
                ('chair_count', models.IntegerField(null=True, db_column='CHAIR_COUNT', blank=True)),
                ('tables_count', models.IntegerField(null=True, db_column='TABLES_COUNT', blank=True)),
                ('air_conditioned', models.CharField(max_length=5, null=True, db_column='AIR_CONDITIONED', blank=True)),
                ('projector_available', models.CharField(max_length=15, null=True, db_column='PROJECTOR_AVAILABLE', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('sitting', models.IntegerField(null=True, db_column='SITTING', blank=True)),
                ('audio_video_display_available', models.CharField(max_length=5, null=True, db_column='AUDIO_VIDEO_DISPLAY_AVAILABLE', blank=True)),
                ('electricity_charges_perhour', models.FloatField(default=0.0, null=True, db_column='ELECTRICITY_CHARGES_PERHOUR', blank=True)),
                ('notice_board_count_per_community_hall', models.IntegerField(null=True, db_column='NOTICE_BOARD_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('standee_location_count_per_community_hall', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('stall_count_per_community_hall', models.IntegerField(null=True, db_column='STALL_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('banner_count_per_community_hall', models.IntegerField(null=True, db_column='BANNER_COUNT_PER_COMMUNITY_HALL', blank=True)),
            ],
            options={
                'db_table': 'community_hall_info',
            },
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('contact_id', models.AutoField(serialize=False, primary_key=True, db_column='CONTACT_ID')),
                ('contact_type', models.TextField(null=True, db_column='CONTACT_TYPE', blank=True)),
                ('specify_others', models.TextField(null=True, db_column='SPECIFY_OTHERS', blank=True)),
                ('contact_name', models.TextField(null=True, db_column='CONTACT_NAME', blank=True)),
                ('contact_landline', models.IntegerField(null=True, db_column='CONTACT_LANDLINE', blank=True)),
                ('contact_mobile', models.IntegerField(null=True, db_column='CONTACT_MOBILE', blank=True)),
                ('contact_emailid', models.TextField(null=True, db_column='CONTACT_EMAILID', blank=True)),
                ('spoc', models.CharField(max_length=5, null=True, db_column='SPOC', blank=True)),
                ('contact_authority', models.CharField(max_length=5, null=True, db_column='CONTACT_AUTHORITY', blank=True)),
            ],
            options={
                'db_table': 'contact_details',
            },
        ),
        migrations.CreateModel(
            name='DoorToDoorInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('flier_distribution_frequency_door', models.CharField(max_length=20, null=True, db_column='FLIER_DISTRIBUTION_FREQUENCY_DOOR', blank=True)),
                ('door_to_door_inventory_status', models.CharField(max_length=15, null=True, db_column='DOOR_TO_DOOR_INVENTORY_STATUS', blank=True)),
                ('door_to_door_price_society', models.FloatField(default=0.0, null=True, db_column='DOOR_TO_DOOR_PRICE_SOCIETY', blank=True)),
                ('door_to_door_price_business', models.FloatField(default=0.0, null=True, db_column='DOOR_TO_DOOR_PRICE_BUSINESS', blank=True)),
                ('master_door_to_door_flyer_price_society', models.FloatField(default=0.0, null=True, db_column='MASTER_DOOR_TO_DOOR_FLYER_PRICE_SOCIETY', blank=True)),
                ('master_door_to_door_flyer_price_business', models.FloatField(default=0.0, null=True, db_column='MASTER_DOOR_TO_DOOR_FLYER_PRICE_BUSINESS', blank=True)),
                ('leaflet_handover', models.CharField(max_length=5, null=True, db_column='LEAFLET_HANDOVER', blank=True)),
                ('activities', models.CharField(max_length=255, null=True, db_column='ACTIVITIES', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
            ],
            options={
                'db_table': 'door_to_door_info',
            },
        ),
        migrations.CreateModel(
            name='DurationType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('duration_name', models.CharField(max_length=20, db_column='DURATION_NAME')),
                ('days_count', models.IntegerField(db_column='DAYS_COUNT')),
            ],
            options={
                'db_table': 'duration_type',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.AutoField(serialize=False, primary_key=True, db_column='EVENT_ID')),
                ('event_name', models.CharField(max_length=20, null=True, db_column='EVENT_NAME', blank=True)),
                ('event_location', models.CharField(max_length=50, null=True, db_column='EVENT_LOCATION', blank=True)),
                ('past_major_events', models.CharField(max_length=50, null=True, db_column='PAST_MAJOR_EVENTS', blank=True)),
                ('past_gathering_per_event', models.CharField(max_length=5, null=True, db_column='PAST_GATHERING_PER_EVENT', blank=True)),
                ('event_duration', models.IntegerField(null=True, db_column='NO_OF_DAYS', blank=True)),
                ('activities', models.CharField(max_length=50, null=True, db_column='ACTIVITIES', blank=True)),
                ('stall_spaces_count', models.IntegerField(null=True, db_column='STALL_SPACES_COUNT', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
                ('poster_spaces_count', models.IntegerField(null=True, db_column='POSTER_SPACES_COUNT', blank=True)),
                ('standee_spaces_count', models.IntegerField(null=True, db_column='STANDEE_SPACES_COUNT', blank=True)),
                ('event_linked', models.CharField(max_length=5, null=True, db_column='EVENT_LINKED', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('photograph_3', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_3', blank=True)),
                ('event_plan_map', models.CharField(max_length=45, null=True, db_column='EVENT_PLAN_MAP', blank=True)),
                ('event_status', models.CharField(max_length=10, null=True, db_column='EVENT_STATUS', blank=True)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='ImageMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('location_id', models.CharField(max_length=20, db_column='LOCATION_ID')),
                ('location_type', models.CharField(max_length=20, null=True, db_column='LOCATION_TYPE', blank=True)),
                ('image_url', models.CharField(max_length=100, db_column='IMAGE_URL')),
                ('comments', models.CharField(max_length=100, null=True, db_column='COMMENTS', blank=True)),
                ('name', models.CharField(max_length=50, null=True, db_column='NAME', blank=True)),
            ],
            options={
                'db_table': 'image_mapping',
            },
        ),
        migrations.CreateModel(
            name='InventoryInfo',
            fields=[
                ('inventory_type_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='INVENTORY_TYPE_ID')),
                ('inventory_length', models.CharField(max_length=10, null=True, db_column='INVENTORY_LENGTH', blank=True)),
                ('inventory_breadth', models.CharField(max_length=10, null=True, db_column='INVENTORY_BREADTH', blank=True)),
                ('inventory_height', models.CharField(max_length=10, null=True, db_column='INVENTORY_HEIGHT', blank=True)),
                ('inventory_area', models.CharField(max_length=10, null=True, db_column='INVENTORY_AREA', blank=True)),
                ('inventory_size', models.CharField(max_length=10, null=True, db_column='INVENTORY_SIZE', blank=True)),
                ('inventory_name', models.CharField(max_length=70, null=True, db_column='INVENTORY_NAME', blank=True)),
                ('comments1', models.CharField(max_length=500, null=True, db_column='COMMENTS1', blank=True)),
                ('comments2', models.CharField(max_length=500, null=True, db_column='COMMENTS2', blank=True)),
                ('material_type', models.CharField(max_length=70, null=True, db_column='MATERIAL_TYPE', blank=True)),
            ],
            options={
                'db_table': 'inventory_info',
            },
        ),
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('location_id', models.CharField(max_length=20, db_column='LOCATION_ID')),
                ('location_type', models.CharField(max_length=20, null=True, db_column='LOCATION_TYPE', blank=True)),
            ],
            options={
                'db_table': 'inventory_location',
            },
        ),
        migrations.CreateModel(
            name='LiftDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('lift_tag', models.CharField(max_length=20, null=True, db_column='LIFT_TAG', blank=True)),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('acrylic_board_available', models.CharField(max_length=5, null=True, db_column='ACRYLIC_BOARD_AVAILABLE', blank=True)),
                ('lift_location', models.CharField(max_length=100, null=True, db_column='LIFT_LOCATION', blank=True)),
                ('total_poster_per_lift', models.IntegerField(null=True, db_column='TOTAL_POSTER_PER_LIFT', blank=True)),
                ('lift_lit', models.CharField(max_length=5, null=True, db_column='LIFT_LIT', blank=True)),
                ('lift_bubble_wrapping_allowed', models.CharField(max_length=5, null=True, db_column='LIFT_BUBBLE_WRAPPING_ALLOWED', blank=True)),
                ('lift_advt_walls_count', models.IntegerField(null=True, db_column='LIFT_ADVT_WALLS_COUNT', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'lift_details',
            },
        ),
        migrations.CreateModel(
            name='MailboxInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('tower_id', models.CharField(max_length=20, null=True, db_column='TOWER_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('flier_distribution_frequency', models.CharField(max_length=20, null=True, db_column='FLIER_DISTRIBUTION_FREQUENCY', blank=True)),
                ('mail_box_inventory_status', models.CharField(max_length=20, null=True, db_column='MAIL_BOX_INVENTORY_STATUS', blank=True)),
                ('mailbox_count_per_tower', models.IntegerField(null=True, db_column='MAILBOX_COUNT_PER_TOWER', blank=True)),
                ('mailbox_flyer_price_society', models.FloatField(default=0.0, null=True, db_column='MAILBOX_FLYER_PRICE_SOCIETY', blank=True)),
                ('mailbox_flyer_price_business', models.FloatField(default=0.0, null=True, db_column='MAILBOX_FLYER_PRICE_BUSINESS', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'mailbox_info',
            },
        ),
        migrations.CreateModel(
            name='NoticeBoardDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('notice_board_tag', models.CharField(max_length=20, null=True, db_column='NOTICE_BOARD_TAG', blank=True)),
                ('notice_board_type', models.CharField(max_length=50, null=True, db_column='NOTICE_BOARD_TYPE', blank=True)),
                ('notice_board_type_other', models.CharField(max_length=30, null=True, db_column='NOTICE_BOARD_TYPE_OTHER', blank=True)),
                ('notice_board_location', models.CharField(max_length=100, null=True, db_column='NOTICE_BOARD_LOCATION', blank=True)),
                ('total_poster_per_notice_board', models.IntegerField(null=True, db_column='TOTAL_POSTER_PER_NOTICE_BOARD', blank=True)),
                ('poster_location_notice_board', models.CharField(max_length=5, null=True, db_column='POSTER_LOCATION_NOTICE_BOARD', blank=True)),
                ('notice_board_lit', models.CharField(max_length=1, null=True, db_column='NOTICE_BOARD_LIT', blank=True)),
                ('notice_board_size_length', models.FloatField(default=0.0, null=True, db_column='NOTICE_BOARD_SIZE_length', blank=True)),
                ('notice_board_size_breadth', models.FloatField(default=0.0, null=True, db_column='NOTICE_BOARD_SIZE_BREADTH', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('adinventory_id', models.CharField(max_length=255, null=True, db_column='ADINVENTORY_ID', blank=True)),
            ],
            options={
                'db_table': 'notice_board_details',
            },
        ),
        migrations.CreateModel(
            name='OperationsInfo',
            fields=[
                ('operator_id', models.CharField(max_length=10, serialize=False, primary_key=True, db_column='OPERATOR_ID')),
                ('operator_name', models.CharField(max_length=100, null=True, db_column='OPERATOR_NAME', blank=True)),
                ('operator_email', models.CharField(max_length=50, null=True, db_column='OPERATOR_EMAIL', blank=True)),
                ('operator_company', models.CharField(max_length=100, null=True, db_column='OPERATOR_COMPANY', blank=True)),
                ('operator_phone_number', models.IntegerField(null=True, db_column='OPERATOR_PHONE_NUMBER', blank=True)),
                ('comments_1', models.CharField(max_length=500, null=True, db_column='COMMENTS_1', blank=True)),
                ('comments_2', models.CharField(max_length=500, null=True, db_column='COMMENTS_2', blank=True)),
                ('company_id', models.CharField(max_length=50, null=True, db_column='COMPANY_ID', blank=True)),
                ('company_address', models.CharField(max_length=250, null=True, db_column='COMPANY_ADDRESS', blank=True)),
            ],
            options={
                'db_table': 'operations_info',
            },
        ),
        migrations.CreateModel(
            name='PoleInventory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('pole_hoarding_size', models.CharField(max_length=10, null=True, db_column='POLE_HOARDING_SIZE', blank=True)),
                ('pole_area', models.CharField(max_length=10, null=True, db_column='POLE_AREA', blank=True)),
                ('pole_hoarding_type', models.CharField(max_length=20, null=True, db_column='POLE_HOARDING_TYPE', blank=True)),
                ('pole_lit_status', models.TextField(null=True, db_column='POLE_LIT_STATUS', blank=True)),
                ('pole_sides', models.CharField(max_length=10, null=True, db_column='POLE_SIDES', blank=True)),
                ('pole_monthly_price_society', models.CharField(max_length=5, null=True, db_column='POLE_MONTHLY_PRICE_SOCIETY', blank=True)),
                ('pole_quarterly_price_society', models.CharField(max_length=5, null=True, db_column='POLE_QUARTERLY_PRICE_SOCIETY', blank=True)),
                ('pole_monthly_price_business', models.CharField(max_length=5, null=True, db_column='POLE_MONTHLY_PRICE_BUSINESS', blank=True)),
                ('pole_quarterly_price_business', models.CharField(max_length=5, null=True, db_column='POLE_QUARTERLY_PRICE_BUSINESS', blank=True)),
                ('pole_location', models.CharField(max_length=50, null=True, db_column='POLE_LOCATION', blank=True)),
                ('pole_inventory_status', models.CharField(max_length=20, null=True, db_column='POLE_INVENTORY_STATUS', blank=True)),
            ],
            options={
                'db_table': 'pole_inventory',
            },
        ),
        migrations.CreateModel(
            name='PosterInventory',
            fields=[
                ('adinventory_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='ADINVENTORY_ID')),
                ('notice_board_id', models.CharField(max_length=20, null=True, db_column='NOTICE_BOARD_ID', blank=True)),
                ('poster_location', models.CharField(max_length=50, null=True, db_column='POSTER_LOCATION', blank=True)),
                ('poster_area', models.CharField(max_length=10, null=True, db_column='POSTER_AREA', blank=True)),
                ('inventory_status', models.CharField(max_length=20, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('poster_count_per_notice_board', models.IntegerField(null=True, db_column='POSTER_COUNT_PER_NOTICE_BOARD', blank=True)),
                ('inventory_type_id', models.CharField(max_length=255, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
            ],
            options={
                'db_table': 'poster_inventory',
            },
        ),
        migrations.CreateModel(
            name='PosterInventoryMapping',
            fields=[
                ('inventory_mapping_id', models.AutoField(serialize=False, primary_key=True, db_column='INVENTORY_MAPPING_ID')),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('poster_adinventory_id', models.CharField(max_length=20, null=True, db_column='POSTER_ADINVENTORY_ID', blank=True)),
                ('standee_adinventory_id', models.CharField(max_length=20, null=True, db_column='STANDEE_ADINVENTORY_ID', blank=True)),
                ('banner_adinventory_id', models.CharField(max_length=20, null=True, db_column='BANNER_ADINVENTORY_ID', blank=True)),
                ('stall_adinventory_id', models.CharField(max_length=20, null=True, db_column='STALL_ADINVENTORY_ID', blank=True)),
            ],
            options={
                'db_table': 'poster_inventory_mapping',
            },
        ),
        migrations.CreateModel(
            name='PriceMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('society_price', models.IntegerField(db_column='SOCIETY_PRICE')),
                ('business_price', models.IntegerField(db_column='BUSINESS_PRICE')),
                ('adinventory_id', models.ForeignKey(related_name='prices', db_column='ADINVENTORY_LOCATION_MAPPING_ID', blank=True, to='v0.AdInventoryLocationMapping', null=True)),
                ('adinventory_type', models.ForeignKey(db_column='ADINVENTORY_TYPE_ID', blank=True, to='v0.AdInventoryType', null=True)),
                ('duration_type', models.ForeignKey(db_column='DURATION_ID', blank=True, to='v0.DurationType', null=True)),
            ],
            options={
                'db_table': 'price_mapping',
            },
        ),
        migrations.CreateModel(
            name='PriceMappingDefault',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('society_price', models.IntegerField(db_column='SOCIETY_PRICE')),
                ('business_price', models.IntegerField(db_column='BUSINESS_PRICE')),
                ('adinventory_type', models.ForeignKey(db_column='ADINVENTORY_TYPE_ID', blank=True, to='v0.AdInventoryType', null=True)),
                ('duration_type', models.ForeignKey(db_column='DURATION_ID', blank=True, to='v0.DurationType', null=True)),
            ],
            options={
                'db_table': 'price_mapping_default',
            },
        ),
        migrations.CreateModel(
            name='RatioDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_id', models.CharField(max_length=20, db_column='SUPPLIER_ID')),
                ('machadalo_index', models.CharField(max_length=30, db_column='MACHADALO_INDEX')),
                ('age_proportions', models.CharField(max_length=15, null=True, db_column='AGE_PROPORTIONS', blank=True)),
                ('flat_avg_rental_persqft', models.CharField(max_length=10, null=True, db_column='FLAT_AVG_RENTAL_PERSQFT', blank=True)),
                ('flat_avg_size', models.CharField(max_length=5, null=True, db_column='FLAT_AVG_SIZE', blank=True)),
                ('flat_sale_cost_persqft', models.CharField(max_length=5, null=True, db_column='FLAT_SALE_COST_PERSQFT', blank=True)),
                ('wall_count', models.IntegerField(null=True, db_column='WALL_COUNT', blank=True)),
                ('major_event_count', models.IntegerField(null=True, db_column='MAJOR_EVENT_COUNT', blank=True)),
            ],
            options={
                'db_table': 'ratio_details',
            },
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('user_id', models.AutoField(serialize=False, primary_key=True, db_column='USER_ID')),
                ('first_name', models.TextField(null=True, db_column='FIRST_NAME', blank=True)),
                ('email', models.TextField(null=True, db_column='EMAIL', blank=True)),
                ('password', models.TextField(null=True, db_column='PASSWORD', blank=True)),
                ('login_type', models.TextField(null=True, db_column='LOGIN_TYPE', blank=True)),
                ('system_generated_id', models.BigIntegerField(db_column='SYSTEM_GENERATED_ID')),
                ('adminstrator_approved', models.CharField(max_length=255, null=True, db_column='ADMINSTRATOR_APPROVED', blank=True)),
                ('company_name', models.CharField(max_length=255, null=True, db_column='COMPANY_NAME', blank=True)),
                ('name', models.CharField(max_length=255, null=True, db_column='NAME', blank=True)),
                ('mobile_no', models.CharField(max_length=255, null=True, db_column='MOBILE_NO', blank=True)),
                ('signup_status', models.CharField(max_length=255, null=True, db_column='SIGNUP_STATUS', blank=True)),
            ],
            options={
                'db_table': 'signup',
            },
        ),
        migrations.CreateModel(
            name='SocietyFlat',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('flat_tag', models.CharField(max_length=20, null=True, db_column='FLAT_TAG', blank=True)),
                ('flat_type', models.CharField(max_length=20, db_column='FLAT_TYPE')),
                ('flat_count', models.IntegerField(null=True, db_column='FLAT_COUNT', blank=True)),
                ('flat_type_count', models.IntegerField(null=True, db_column='FLAT_TYPE_COUNT', blank=True)),
                ('flat_size_per_sq_feet_carpet_area', models.FloatField(default=0.0, null=True, db_column='FLAT_SIZE_PER_SQ_FEET_CARPET_AREA', blank=True)),
                ('flat_size_per_sq_feet_builtup_area', models.FloatField(default=0.0, null=True, db_column='FLAT_SIZE_PER_SQ_FEET_BUILTUP_AREA', blank=True)),
                ('flat_rent', models.IntegerField(null=True, db_column='FLAT_RENT', blank=True)),
                ('rent_per_sqft', models.IntegerField(null=True, db_column='RENT_PER_SQFT', blank=True)),
                ('average_rent_pers_sqft_tower', models.IntegerField(null=True, db_column='AVERAGE_RENT_PERS_SQFT_TOWER', blank=True)),
            ],
            options={
                'db_table': 'society_flat',
            },
        ),
        migrations.CreateModel(
            name='SocietyTower',
            fields=[
                ('tower_id', models.AutoField(serialize=False, primary_key=True, db_column='TOWER_ID')),
                ('tower_tag', models.CharField(max_length=20, null=True, db_column='TOWER_TAG', blank=True)),
                ('tower_name', models.CharField(max_length=20, null=True, db_column='TOWER_NAME', blank=True)),
                ('flat_count_per_tower', models.IntegerField(null=True, db_column='FLAT_COUNT_PER_TOWER', blank=True)),
                ('floor_count_per_tower', models.IntegerField(null=True, db_column='FLOOR_COUNT_PER_TOWER', blank=True)),
                ('notice_board_count_per_tower', models.IntegerField(null=True, db_column='NOTICE_BOARD_COUNT_PER_TOWER', blank=True)),
                ('standee_location_count_per_tower', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_TOWER', blank=True)),
                ('mailbox_count_per_tower', models.IntegerField(null=True, db_column='MAILBOX_COUNT_PER_TOWER', blank=True)),
                ('stall_count_per_tower', models.IntegerField(null=True, db_column='STALL_COUNT_PER_TOWER', blank=True)),
                ('tower_location', models.CharField(max_length=100, null=True, db_column='TOWER_LOCATION', blank=True)),
                ('tower_resident_count', models.IntegerField(null=True, db_column='TOWER_RESIDENT_COUNT', blank=True)),
                ('lift_count', models.IntegerField(null=True, db_column='LIFT_COUNT', blank=True)),
                ('average_rent_per_sqft', models.IntegerField(null=True, db_column='AVERAGE_RENT_PER_SQFT', blank=True)),
            ],
            options={
                'db_table': 'society_tower',
            },
        ),
        migrations.CreateModel(
            name='SportsInfra',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('sports_infrastructure_id', models.CharField(max_length=20, null=True, db_column='SPORTS_INFRASTRUCTURE_ID', blank=True)),
                ('stall_spaces_count', models.IntegerField(null=True, db_column='STALL_SPACES_COUNT', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
                ('poster_spaces_count', models.IntegerField(null=True, db_column='POSTER_SPACES_COUNT', blank=True)),
                ('standee_spaces_count', models.IntegerField(null=True, db_column='STANDEE_SPACES_COUNT', blank=True)),
                ('sponsorship_amount_society', models.IntegerField(null=True, db_column='SPONSORSHIP_AMOUNT_SOCIETY', blank=True)),
                ('sponsorship_amount_business', models.IntegerField(null=True, db_column='SPONSORSHIP_AMOUNT_BUSINESS)', blank=True)),
                ('start_date', models.DateField(null=True, db_column='START_DATE', blank=True)),
                ('end_date', models.DateField(null=True, db_column='END_DATE', blank=True)),
                ('outside_participants_allowed', models.CharField(max_length=5, null=True, db_column='OUTSIDE_PARTICIPANTS_ALLOWED', blank=True)),
                ('lit_unlit', models.CharField(max_length=5, null=True, db_column='LIT_UNLIT', blank=True)),
                ('daily_infra_charges_society', models.IntegerField(null=True, db_column='DAILY_INFRA_CHARGES_SOCIETY', blank=True)),
                ('daily_infra_charges_business', models.IntegerField(null=True, db_column='DAILY_INFRA_CHARGES_BUSINESS', blank=True)),
                ('play_areas_count', models.IntegerField(null=True, db_column='PLAY_AREAS_COUNT', blank=True)),
                ('play_area_size', models.IntegerField(null=True, db_column='PLAY_AREA_SIZE', blank=True)),
                ('sports_type', models.CharField(max_length=20, null=True, db_column='SPORTS_TYPE', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'sports_infra',
            },
        ),
        migrations.CreateModel(
            name='StallInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, db_column='ADINVENTORY_ID')),
                ('type', models.CharField(max_length=20, null=True, db_column='STALL_TYPES', blank=True)),
                ('stall_timings_morning', models.CharField(max_length=10, null=True, db_column='STALL_TIMINGS_morning', blank=True)),
                ('stall_size_area', models.FloatField(default=0.0, null=True, db_column='STALL_SIZE_AREA', blank=True)),
                ('current_price_stall', models.CharField(max_length=5, null=True, db_column='Current_Price_Stall', blank=True)),
                ('stall_timings_evening', models.TimeField(null=True, db_column='STALL_TIMINGS_evening', blank=True)),
                ('stall_location', models.CharField(max_length=50, null=True, db_column='STALL_LOCATION', blank=True)),
                ('electricity_available_stalls', models.CharField(max_length=50, null=True, db_column='ELECTRICITY_AVAILABLE_STALLS', blank=True)),
                ('electricity_charges_daily', models.CharField(max_length=50, null=True, db_column='ELECTRICITY_CHARGES_DAILY', blank=True)),
                ('sound_system_allowed', models.CharField(max_length=50, null=True, db_column='SOUND_SYSTEM_ALLOWED', blank=True)),
                ('stall_furniture_available', models.CharField(max_length=50, null=True, db_column='STALL_FURNITURE_AVAILABLE', blank=True)),
                ('stall_furniture_details', models.CharField(max_length=50, null=True, db_column='STALL_FURNITURE_DETAILS', blank=True)),
                ('stall_inventory_status', models.CharField(max_length=15, null=True, db_column='STALL_INVENTORY_STATUS', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'stall_inventory',
            },
        ),
        migrations.CreateModel(
            name='StandeeInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('standee_location', models.CharField(max_length=50, null=True, db_column='STANDEE_LOCATION', blank=True)),
                ('type', models.CharField(max_length=10, null=True, db_column='STANDEE_TYPE', blank=True)),
                ('standee_size', models.CharField(max_length=10, null=True, db_column='STANDEE_SIZE', blank=True)),
                ('standee_sides', models.CharField(max_length=10, null=True, db_column='STANDEE_SIDES', blank=True)),
                ('standee_location_in_tower', models.CharField(max_length=50, null=True, db_column='STANDEE_LOCATION_IN_TOWER', blank=True)),
                ('standee_inventory_status', models.TextField(null=True, db_column='STANDEE_INVENTORY_STATUS', blank=True)),
                ('sides', models.CharField(max_length=255, null=True, db_column='SIDES', blank=True)),
            ],
            options={
                'db_table': 'standee_inventory',
            },
        ),
        migrations.CreateModel(
            name='StreetFurniture',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=20, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('no_of_furniture', models.IntegerField(null=True, db_column='NO_OF_FURNITURE', blank=True)),
                ('type_of_furniture', models.CharField(max_length=20, null=True, db_column='TYPE_OF_FURNITURE', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('comment_1', models.TextField(null=True, db_column='COMMENT_1', blank=True)),
                ('comment_2', models.TextField(null=True, db_column='COMMENT_2', blank=True)),
                ('furniture_status', models.CharField(max_length=10, null=True, db_column='FURNITURE_STATUS', blank=True)),
            ],
            options={
                'db_table': 'street_furniture',
            },
        ),
        migrations.CreateModel(
            name='SupplierInfo',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_name', models.CharField(max_length=30, null=True, db_column='SUPPLIER_NAME', blank=True)),
                ('supplier_emailid', models.CharField(max_length=100, null=True, db_column='SUPPLIER_EMAILID', blank=True)),
                ('supplier_phone_no', models.CharField(max_length=15, null=True, db_column='SUPPLIER_PHONE_NO', blank=True)),
                ('supplier_location', models.CharField(max_length=70, null=True, db_column='SUPPLIER_LOCATION', blank=True)),
                ('supplier_business_type', models.CharField(max_length=30, null=True, db_column='SUPPLIER_BUSINESS_TYPE', blank=True)),
                ('comments_1', models.CharField(max_length=500, null=True, db_column='COMMENTS_1', blank=True)),
                ('comments_2', models.CharField(max_length=500, null=True, db_column='COMMENTS_2', blank=True)),
                ('supplier_address', models.CharField(max_length=250, null=True, db_column='SUPPLIER_ADDRESS', blank=True)),
                ('total_inventory', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY', blank=True)),
                ('total_inventory_currently_released', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY_CURRENTLY_RELEASED', blank=True)),
                ('total_inventory_currently_released_audit', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY_CURRENTLY_RELEASED_AUDIT', blank=True)),
                ('pan_id', models.CharField(max_length=10, null=True, db_column='PAN_ID', blank=True)),
                ('tan_id', models.CharField(max_length=12, null=True, db_column='TAN_ID', blank=True)),
                ('supplier_type', models.CharField(max_length=20, null=True, db_column='SUPPLIER_TYPE', blank=True)),
                ('mapping_date', models.DateField(null=True, db_column='MAPPING_DATE', blank=True)),
                ('agreement_term_start', models.DateField(null=True, db_column='AGREEMENT_TERM_START', blank=True)),
                ('agreement_term_end', models.DateField(null=True, db_column='AGREEMENT_TERM_END', blank=True)),
                ('current_status', models.DateField(null=True, db_column='CURRENT_STATUS', blank=True)),
            ],
            options={
                'db_table': 'supplier_info',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeSociety',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('society_name', models.CharField(max_length=70, null=True, db_column='SOCIETY_NAME', blank=True)),
                ('society_address1', models.CharField(max_length=250, null=True, db_column='SOCIETY_ADDRESS1', blank=True)),
                ('society_address2', models.CharField(max_length=250, null=True, db_column='SOCIETY_ADDRESS2', blank=True)),
                ('society_zip', models.IntegerField(null=True, db_column='SOCIETY_ZIP', blank=True)),
                ('society_city', models.CharField(max_length=250, null=True, db_column='SOCIETY_CITY', blank=True)),
                ('society_state', models.CharField(max_length=250, null=True, db_column='SOCIETY_STATE', blank=True)),
                ('society_longitude', models.FloatField(default=0.0, null=True, db_column='SOCIETY_LONGITUDE', blank=True)),
                ('society_latitude', models.FloatField(default=0.0, null=True, db_column='SOCIETY_LATITUDE', blank=True)),
                ('society_location_type', models.CharField(max_length=50, null=True, db_column='SOCIETY_LOCATION_TYPE', blank=True)),
                ('society_type_quality', models.CharField(max_length=30, null=True, db_column='SOCIETY_TYPE_QUALITY', blank=True)),
                ('society_type_quantity', models.CharField(max_length=30, null=True, db_column='SOCIETY_TYPE_QUANTITY', blank=True)),
                ('flat_count', models.IntegerField(null=True, db_column='FLAT_COUNT', blank=True)),
                ('resident_count', models.IntegerField(null=True, db_column='RESIDENT_COUNT', blank=True)),
                ('cars_count', models.IntegerField(null=True, db_column='CARS_COUNT', blank=True)),
                ('luxury_cars_count', models.IntegerField(null=True, db_column='LUXURY_CARS_COUNT', blank=True)),
                ('lift_count', models.IntegerField(null=True, db_column='LIFT_COUNT', blank=True)),
                ('machadalo_index', models.FloatField(default=0.0, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('average_rent', models.IntegerField(null=True, db_column='AVERAGE_RENT', blank=True)),
                ('food_tasting_allowed', models.CharField(max_length=5, null=True, db_column='FOOD_TASTING_ALLOWED', blank=True)),
                ('events_occurance', models.CharField(max_length=5, null=True, db_column='EVENTS_OCCURANCE', blank=True)),
                ('preferred_business_type', models.CharField(max_length=50, null=True, db_column='SOCIETIES_PREFERRED_BUSINESS_TYPE', blank=True)),
                ('preferred_business_id', models.CharField(max_length=50, null=True, db_column='SOCIETIES_PREFERRED_BUSINESS_ID', blank=True)),
                ('business_type_not_allowed', models.CharField(max_length=5, null=True, db_column='BUSINESS_TYPE_NOT_ALLOWED', blank=True)),
                ('business_id_not_allowed', models.IntegerField(null=True, db_column='BUSINESS_ID_NOT_ALLOWED', blank=True)),
                ('referred_by', models.CharField(max_length=5, null=True, db_column='REFERRED_BY', blank=True)),
                ('contact_person_count', models.IntegerField(null=True, db_column='CONTACT_PERSON_COUNT', blank=True)),
                ('walking_area_available', models.CharField(max_length=45, null=True, db_column='WALKING_AREA_AVAILABLE', blank=True)),
                ('walking_area_size', models.CharField(max_length=10, null=True, db_column='WALKING_AREA_SIZE', blank=True)),
                ('count_0to6', models.IntegerField(null=True, db_column='COUNT_0TO6', blank=True)),
                ('count_6_18', models.IntegerField(null=True, db_column='COUNT_6-18', blank=True)),
                ('count_19_35', models.IntegerField(null=True, db_column='COUNT_19-35', blank=True)),
                ('count_36_50', models.IntegerField(null=True, db_column='COUNT_36-50', blank=True)),
                ('count_50to65', models.IntegerField(null=True, db_column='COUNT_50to65', blank=True)),
                ('count_65above', models.IntegerField(null=True, db_column='COUNT_65above', blank=True)),
                ('flat_avg_size', models.IntegerField(null=True, db_column='FLAT_AVG_SIZE', blank=True)),
                ('flat_avg_rental_persqft', models.IntegerField(null=True, db_column='FLAT_AVG_RENTAL_PERSQFT', blank=True)),
                ('flat_sale_cost_persqft', models.IntegerField(null=True, db_column='FLAT_SALE_COST_PERSQFT', blank=True)),
                ('total_ad_spaces', models.IntegerField(null=True, db_column='TOTAL_AD_SPACES', blank=True)),
                ('past_collections_stalls', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_STALLS', blank=True)),
                ('past_collections_car', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_CAR', blank=True)),
                ('past_collections_poster', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_POSTER', blank=True)),
                ('past_collections_banners', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_BANNERS', blank=True)),
                ('past_collections_standee', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_STANDEE', blank=True)),
                ('past_sponsorship_collection_events', models.IntegerField(null=True, db_column='PAST_YEAR_SPONSORSHIP_COLLECTION_EVENTS', blank=True)),
                ('past_total_sponsorship', models.IntegerField(null=True, db_column='PAST_YEAR_TOTAL_SPONSORSHIP', blank=True)),
            ],
            options={
                'db_table': 'supplier_society',
            },
        ),
        migrations.CreateModel(
            name='SwimmingPoolInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('size_breadth', models.FloatField(default=0.0, null=True, db_column='SIZE_BREADTH', blank=True)),
                ('size_length', models.FloatField(default=0.0, null=True, db_column='SIZE_LENGTH', blank=True)),
                ('side_area', models.FloatField(default=0.0, null=True, db_column='SIDE_AREA', blank=True)),
                ('side_rentals', models.CharField(max_length=10, null=True, db_column='SIDE_RENTALS', blank=True)),
                ('timings_open', models.TimeField(null=True, db_column='TIMINGS_OPEN', blank=True)),
                ('timings_close', models.TimeField(null=True, db_column='TIMINGS_CLOSE', blank=True)),
                ('daily_price_society', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_SOCIETY', blank=True)),
                ('daily_price_business', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_BUSINESS', blank=True)),
                ('location', models.CharField(max_length=50, null=True, db_column='LOCATION', blank=True)),
                ('notice_board_count_per_swimming_pool', models.IntegerField(null=True, db_column='NOTICE_BOARD_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('standee_location_count_per_swimming_pool', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('stall_count_per_swimming_pool', models.IntegerField(null=True, db_column='STALL_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('banner_count_per_swimming_pool', models.IntegerField(null=True, db_column='BANNER_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('sitting', models.IntegerField(null=True, db_column='SITTING', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('audio_video_display_available', models.CharField(max_length=5, null=True, db_column='AUDIO_VIDEO_DISPLAY_AVAILABLE', blank=True)),
                ('electricity_charges_perhour', models.IntegerField(null=True, db_column='ELECTRICITY_CHARGES_PERHOUR', blank=True)),
                ('changing_room_available', models.CharField(max_length=5, null=True, db_column='CHANGING_ROOM_AVAILABLE', blank=True)),
                ('lit_unlit', models.CharField(max_length=5, null=True, db_column='LIT_UNLIT', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('supplier', models.ForeignKey(related_name='swimming_pools', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True)),
            ],
            options={
                'db_table': 'swimming_pool_info',
            },
        ),
        migrations.CreateModel(
            name='UserInquiry',
            fields=[
                ('inquiry_id', models.AutoField(serialize=False, primary_key=True, db_column='INQUIRY_ID')),
                ('company_name', models.CharField(max_length=40, db_column='COMPANY_NAME')),
                ('contact_person_name', models.CharField(max_length=40, null=True, db_column='CONTACT_PERSON_NAME', blank=True)),
                ('email', models.CharField(max_length=40, null=True, db_column='EMAIL', blank=True)),
                ('phone', models.IntegerField(null=True, db_column='PHONE', blank=True)),
                ('inquiry_details', models.TextField(db_column='INQUIRY_DETAILS')),
            ],
            options={
                'db_table': 'user_inquiry',
            },
        ),
        migrations.CreateModel(
            name='WallInventory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=20, db_column='ADINVENTORY_ID')),
                ('wall_size', models.CharField(max_length=10, null=True, db_column='WALL_SIZE', blank=True)),
                ('wall_frame_size', models.CharField(max_length=10, null=True, db_column='WALL_FRAME_SIZE', blank=True)),
                ('wall_area', models.CharField(max_length=10, null=True, db_column='WALL_AREA', blank=True)),
                ('wall_type', models.CharField(max_length=20, null=True, db_column='WALL_TYPE', blank=True)),
                ('wall_internal_external', models.CharField(max_length=10, null=True, db_column='WALL_INTERNAL_EXTERNAL', blank=True)),
                ('wall_sides', models.CharField(max_length=10, null=True, db_column='WALL_SIDES', blank=True)),
                ('wall_monthly_price_society', models.FloatField(default=0.0, null=True, db_column='WALL_MONTHLY_PRICE_SOCIETY', blank=True)),
                ('wall_quarterly_price_society', models.FloatField(default=0.0, null=True, db_column='WALL_QUARTERLY_PRICE_SOCIETY', blank=True)),
                ('wall_monthly_price_business', models.FloatField(default=0.0, null=True, db_column='WALL_MONTHLY_PRICE_BUSINESS', blank=True)),
                ('wall_quarterly_price_business', models.FloatField(default=0.0, null=True, db_column='WALL_QUARTERLY_PRICE_BUSINESS', blank=True)),
                ('wall_location', models.CharField(max_length=50, null=True, db_column='WALL_LOCATION', blank=True)),
                ('wall_paint_allowed', models.CharField(max_length=5, null=True, db_column='WALL_PAINT_ALLOWED', blank=True)),
                ('wall_frame_status', models.CharField(max_length=5, null=True, db_column='WALL_FRAME_STATUS', blank=True)),
                ('wall_inventory_status', models.CharField(max_length=15, null=True, db_column='WALL_INVENTORY_STATUS', blank=True)),
                ('supplier', models.ForeignKey(related_name='walls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True)),
            ],
            options={
                'db_table': 'wall_inventory',
            },
        ),
        migrations.AddField(
            model_name='streetfurniture',
            name='supplier',
            field=models.ForeignKey(related_name='street_furniture', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='standeeinventory',
            name='supplier',
            field=models.ForeignKey(related_name='standees', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='stallinventory',
            name='supplier',
            field=models.ForeignKey(related_name='stalls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='sportsinfra',
            name='supplier',
            field=models.ForeignKey(related_name='sports', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societytower',
            name='supplier',
            field=models.ForeignKey(related_name='towers', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societyflat',
            name='tower',
            field=models.ForeignKey(related_name='flats', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='ratiodetails',
            unique_together=set([('supplier_id', 'machadalo_index')]),
        ),
        migrations.AddField(
            model_name='pricemappingdefault',
            name='supplier',
            field=models.ForeignKey(related_name='default_prices', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='pricemapping',
            name='supplier',
            field=models.ForeignKey(related_name='inv_prices', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='posterinventory',
            name='supplier',
            field=models.ForeignKey(db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='poleinventory',
            name='supplier',
            field=models.ForeignKey(related_name='poles', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='noticeboarddetails',
            name='tower',
            field=models.ForeignKey(related_name='notice_boards', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AddField(
            model_name='mailboxinfo',
            name='supplier',
            field=models.ForeignKey(related_name='mail_boxes', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='liftdetails',
            name='tower',
            field=models.ForeignKey(related_name='lifts', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AddField(
            model_name='imagemapping',
            name='supplier',
            field=models.ForeignKey(related_name='images', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='events',
            name='supplier',
            field=models.ForeignKey(related_name='events', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='doortodoorinfo',
            name='supplier',
            field=models.ForeignKey(related_name='door_to_doors', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='contactdetails',
            name='supplier',
            field=models.ForeignKey(related_name='contacts', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='communityhallinfo',
            name='supplier',
            field=models.ForeignKey(related_name='community_halls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='cardisplayinventory',
            name='supplier',
            field=models.ForeignKey(related_name='car_displays', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='bannerinventory',
            name='supplier',
            field=models.ForeignKey(related_name='banners', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='adinventorylocationmapping',
            name='location',
            field=models.ForeignKey(related_name='inventory_locations', db_column='INVENTORY_LOCATION_ID', blank=True, to='v0.InventoryLocation', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='societyflat',
            unique_together=set([('tower', 'flat_type')]),
        ),
    ]
